<?php

/**
 * @file
 * Contains hooks for Paragraphs Feature module.
 */

use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\WidgetInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\paragraphs\Plugin\Field\FieldWidget\ParagraphsWidget;
use Drupal\paragraphs_features\ParagraphsFeatures;

/**
 * Implements hook_field_widget_complete_form_alter().
 */
function paragraphs_features_field_widget_complete_form_alter(&$field_widget_complete_form, FormStateInterface $form_state, $context) {
  /** @var \Drupal\paragraphs\Plugin\Field\FieldWidget\ParagraphsWidget $widget */
  $widget = $context['widget'];
  if (!($widget instanceof ParagraphsWidget)) {
    return;
  }

  // For compatibility with Drag & Drop in Paragraphs.
  if (!empty($field_widget_complete_form['widget']['#field_name'])) {
    $fieldWrapperId = ParagraphsFeatures::getWrapperId($context['form']['#parents'], $field_widget_complete_form['widget']['#field_name']);
    ParagraphsFeatures::registerFormWidgetFeatures($field_widget_complete_form['widget'], $widget, $fieldWrapperId);
  }
}

/**
 * Implements hook_field_widget_third_party_settings_form().
 */
function paragraphs_features_field_widget_third_party_settings_form(WidgetInterface $plugin, FieldDefinitionInterface $field_definition, $form_mode, $form, FormStateInterface $form_state) {
  $elements = [];

  if ($plugin instanceof ParagraphsWidget) {
    $elements = ParagraphsFeatures::getThirdPartyForm($plugin, $field_definition->getName());
  }

  return $elements;
}

/**
 * Implements hook_paragraphs_widget_actions_alter().
 */
function paragraphs_features_paragraphs_widget_actions_alter(array &$widget_actions, array &$context) {
  /* Render single option for dropdown as button. */

  // Get configuration setting for reducing dropdown to button on single option.
  $dropdown_to_button = \Drupal::config('paragraphs_features.settings')->get('dropdown_to_button');
  if (!$dropdown_to_button) {
    return;
  }

  // "Add above" feature is added by JS and we don't have it in actions list.
  if ($context['element']['top']['#attributes']['class'] && in_array('add-above-on', $context['element']['top']['#attributes']['class'])) {
    return;
  }

  $visible_actions = Element::getVisibleChildren($widget_actions['dropdown_actions']);
  if (count($visible_actions) === 1) {
    $visible_actions = reset($visible_actions);
    $widget_actions['actions'][$visible_actions] = $widget_actions['dropdown_actions'][$visible_actions];
    $widget_actions['dropdown_actions'] = [];
  }
}
