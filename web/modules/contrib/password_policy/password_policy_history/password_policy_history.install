<?php

/**
 * @file
 * Installation and update functions for password policy history.
 */

use Drupal\Core\Database\Database;
use Drupal\user\Entity\User;

/**
 * Implements hook_install().
 */
function password_policy_history_install() {
  // Add current user passwords.
  $users = User::loadMultiple();
  $connection = Database::getConnection();

  foreach ($users as $user) {
    $hashed_pass = $user->getPassword();
    if ($hashed_pass) {
      $values = [
        $user->id(),
        $hashed_pass,
        \Drupal::time()->getRequestTime(),
      ];
      $connection->insert('password_policy_history')
        ->fields(['uid', 'pass_hash', 'timestamp'], $values)
        ->execute();
    }
  }
}

/**
 * Implements hook_schema().
 */
function password_policy_history_schema() {
  $schema['password_policy_history'] = [
    'description' => 'Stores book outline information. Uniquely defines the location of each node in the book outline',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique history ID.',
      ],
      'uid' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid of the user who changed their password.',
      ],
      'pass_hash' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Password hash for historical item.',
      ],
      'timestamp' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Unix timestamp of when password change occurred.',
      ],
    ],
    'primary key' => ['id'],
  ];
  return $schema;
}
