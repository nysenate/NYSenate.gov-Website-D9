<?php

/**
 * @file
 * Provides alterations for Drupal contrib modules.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nys_contrib_alters_form_alter(&$form, $form_state, $form_id) {
  $user = \Drupal::currentUser()->getRoles();
  if ($form_id == 'node_session_form' || $form_id == 'node_session_edit_form' ||
    $form_id == 'node_event_form' || $form_id == 'node_event_edit_form' ||
    $form_id === 'node_public_hearing_edit_form' || $form_id === 'node_public_hearing_form' ||
    $form_id == 'node_school_form' || $form_id == 'node_school_edit_form') {
    $form['field_location']['widget'][0]['#after_build'][] = 'nys_contrib_alters_customize_address';
    if (!empty($form_state->getUserInput())) {
      $form['field_location']['widget'][0]['address']['#default_value']['administrative_area'] = $form_state->getUserInput()['field_location'][0]['address']['administrative_area'] ?? '';
      $form['field_location']['widget'][0]['address']['#default_value']['locality'] = $form_state->getUserInput()['field_location'][0]['address']['locality'] ?? '';
      $form['field_location']['widget'][0]['address']['#default_value']['postal_code'] = $form_state->getUserInput()['field_location'][0]['address']['postal_code'] ?? '';
      $form['field_location']['widget'][0]['address']['#default_value']['address_line1'] = $form_state->getUserInput()['field_location'][0]['address']['address_line1'] ?? '';
      $form['field_location']['widget'][0]['address']['#default_value']['address_line2'] = $form_state->getUserInput()['field_location'][0]['address']['address_line2'] ?? '';
      $form['field_location']['widget'][0]['address']['#default_value']['organization'] = $form_state->getUserInput()['field_location'][0]['address']['organization'] ?? '';
    }
  }
  if (($form_id === 'node_public_hearing_form') ||
    ($form_id === 'node_public_hearing_edit_form') ||
    ($form_id === 'node_session_form') ||
    ($form_id === 'node_session_edit_form') ||
    ($form_id === 'node_event_form') ||
    ($form_id === 'node_event_edit_form')) {
    unset($form['field_event_place']['widget']['#options']['cap']);
    unset($form['field_event_place']['widget']['#options']['lob']);
  }
  if (($form_id === 'node_public_hearing_form') ||
    ($form_id === 'node_public_hearing_edit_form') ||
    ($form_id === 'node_meeting_form') ||
    ($form_id === 'node_meeting_edit_form')) {
    unset($form['field_event_place']['widget']['#options']['teleconference']);
  }
  if ($form_id === 'node_meeting_form' || $form_id === 'node_meeting_edit_form') {
    unset($form['field_event_place']['widget']['#options']['in_district']);
    unset($form['field_event_place']['widget']['#options']['in_albany']);
  }
  if ($form_id === 'node_event_form' || $form_id === 'node_event_edit_form') {
    unset($form['field_video_status']['widget']['#options']['cancelled']);
  }
  //Don't all MCP's to assign roles for the following webform actions
  if ($form_id === 'webform_settings_access_form') {
    if ((in_array("microsite_content_producer", $user)) && (!in_array("administrator", $user))) {
      unset($form['access']['view_any']['roles']);
      unset($form['access']['update_any']['roles']);
      unset($form['access']['delete_any']['roles']);
      unset($form['access']['purge_any']['roles']);
      unset($form['access']['administer']['roles']);
      unset($form['access']['configuration']['roles']);
      unset($form['access']['test']['roles']);
    }
  }
}

/**
 * Implements hook_field_formatter_info_alter().
 */
function nys_contrib_alters_field_formatter_info_alter(array &$info) {
  // Make the boolean formatter apply to all field_types.
  $info['boolean']['field_types'] = array_keys(
    \Drupal::service('plugin.manager.field.field_type')->getDefinitions()
  );
}

/**
 * Renames labels in address contrib module.
 */
function nys_contrib_alters_customize_address($element, $form_state): array {
  $element['address']['organization']['#title'] = t('Location Name');
  $element['address']['address_line1']['#title'] = t('Street');
  $element['address']['address_line2']['#title'] = t('Additional');
  $element['address']['address_line2']['#title_display'] = 'before';
  $element['address']['country_code']['#access'] = FALSE;
  return $element;
}

/**
 * Implements hook_page_attachments().
 */
function nys_contrib_alters_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'nys_contrib_alters/gin_overrides';
}
