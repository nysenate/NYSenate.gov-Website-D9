<?php

/**
 * @file
 * Custom functionality for the nys_dashboard module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_form_alter().
 */
function nys_dashboard_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Cosmetic changes to nys_bill_vote_widget form for my dashboard teasers.
  // @todo refactor \Drupal\nys_bill_vote\Form\BillVoteWidgetForm::buildForm to support additional display modes.
  if (
    str_starts_with(\Drupal::service('path.current')->getPath(), '/dashboard')
    && $form_id === 'nys_bill_vote_widget'
  ) {

    // Remove unused form elements and classes.
    $form['nys_bill_vote_container']['nys_bill_vote_button_wrapper']['nys_bill_subscribe']['#access'] = FALSE;
    unset(
      $form['#attributes'],
      $form['nys_bill_vote_container']['nys_bill_vote_button_wrapper']['nys_bill_vote_yes']['#attributes'],
      $form['nys_bill_vote_container']['nys_bill_vote_button_wrapper']['nys_bill_vote_no']['#attributes']
    );
    $form['#attributes']['class'][] = 'my-dashboard-bill-vote-form';

    // Update button labels.
    $build_label = $form['nys_bill_vote_container']['nys_bill_vote_label']['#markup'];
    $in_favor = str_contains($build_label, 'You are in favor of this bill');
    $opposed = str_contains($build_label, 'You are opposed to this bill');
    if ($in_favor) {
      $form['nys_bill_vote_container']['nys_bill_vote_button_wrapper']['nys_bill_vote_no']['#attributes']['class'][] = 'change-vote';
      $form['nys_bill_vote_container']['nys_bill_vote_button_wrapper']['nys_bill_vote_yes']['#attributes']['class'][] = 'current-vote';
    }
    elseif ($opposed) {
      $form['nys_bill_vote_container']['nys_bill_vote_button_wrapper']['nys_bill_vote_yes']['#attributes']['class'][] = 'change-vote';
      $form['nys_bill_vote_container']['nys_bill_vote_button_wrapper']['nys_bill_vote_no']['#attributes']['class'][] = 'current-vote';
    }

    // Update form label.
    $form['nys_bill_vote_container']['nys_bill_vote_label']['#markup'] = '<div class="field__label">Do you support this bill?</div>';
  }
}

/**
 * Implements hook_form_views_exposed_form_alter().
 */
function nys_dashboard_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Ensure items_per_page element appears before your_senator_filter.
  $your_senator_filter_index = array_search('your_senator_filter', array_keys($form));
  $items_per_page_index = array_search('items_per_page', array_keys($form));
  if ($items_per_page_index !== FALSE && $your_senator_filter_index !== FALSE) {
    $your_senator_filter_element = array_splice($form, $your_senator_filter_index, 1);
    $new_your_senator_filter_index = $items_per_page_index + 1;
    $form = array_slice($form, 0, $new_your_senator_filter_index, TRUE)
      + $your_senator_filter_element
      + array_slice($form, $new_your_senator_filter_index, NULL, TRUE);
  }
}

/**
 * Implements hook_views_data().
 */
function nys_dashboard_views_data() {
  $data['node__field_date']['year_month_filter'] = [
    'title' => t('Filter on year and month'),
    'filter' => [
      'title' => t('Filter on year and month'),
      'help' => t('Custom NYS year/month filter based on field_date, field_ol_publish_date, or field_date_range .'),
      'group' => t('Content'),
      'field' => 'field_date_value',
      'id' => 'year_month_filter',
    ],
  ];
  $data['node__field_senator_multiref']['your_senator_filter'] = [
    'title' => t('Only show content from my senator'),
    'filter' => [
      'title' => t('Only show content from my senator'),
      'help' => t("Custom NYS filter to only show content linked to current user's senator."),
      'group' => t('Content'),
      'field' => 'field_senator_multiref_target_id',
      'id' => 'your_senator_filter',
    ],
  ];
  $data['node__field_issues']['your_issues_filter'] = [
    'title' => t('Filter followed issues'),
    'filter' => [
      'title' => t('Filter followed issues'),
      'help' => t("Custom NYS filter based on current user's followed issues."),
      'group' => t('Content'),
      'field' => 'field_issues_target_id',
      'id' => 'your_issues_filter',
    ],
  ];
  return $data;
}

/**
 * Implements hook_preprocess_page().
 */
function nys_dashboard_preprocess_page(&$variables) {
  // Setup variables for top nav dashboard menu.
  $user_storage = \Drupal::entityTypeManager()->getStorage('user');
  $user = $user_storage->load(\Drupal::currentUser()->id());
  $variables['user_first_name'] = $user?->field_first_name?->value ?? 'Guest';
  $variables['dashboard_link'] = '/dashboard';
  $variables['manage_dashboard_link'] = '/dashboard/manage';
  $variables['edit_account_link'] = '/dashboard/edit';

  // Attach dashboard library to dashboard.
  $request_uri = \Drupal::request()->getRequestUri();
  if (str_starts_with($request_uri, '/dashboard')) {
    $variables['#attached']['library'][] = 'nysenate_theme/full-width-main';
    $variables['actionbar']['type'] = 'disabled';
  }
}

/**
 * Implements hook_preprocess_node().
 */
function nys_dashboard_preprocess_node(&$variables) {
  if ($variables['view_mode'] !== 'my_dashboard_teaser') {
    return;
  }

  // Provide bill milestone information to my dashboard teasers.
  if ($variables['node']->getType() === 'bill') {
    /** @var \Drupal\nys_bills\BillsHelper $bills_helper_service */
    $bills_helper_service = \Drupal::service('nys_bill.bills_helper');
    $variables['positions'] = $bills_helper_service->calculateMilestones(
      $bills_helper_service->resolveBillSubstitution($variables['node'])
    );
  }

  // Provide senator microsite link to my dashboard teasers.
  if (
    !empty($variables['node']->field_senator_multiref->target_id)
    || !empty($variables['node']->field_ol_sponsor->target_id)
  ) {
    $senator_term_id = !empty($variables['node']->field_senator_multiref->target_id)
      ? $variables['node']->field_senator_multiref->target_id
      : $variables['node']->field_ol_sponsor->target_id;
    $senator_term = \Drupal::entityTypeManager()
      ->getStorage('taxonomy_term')
      ->load($senator_term_id);
    /** @var \Drupal\nys_senators\Service\Microsites $microsites_service */
    $microsites_service = \Drupal::service('nys_senators.microsites');
    $variables['senator_microsite_url'] = $microsites_service->getMicrosite($senator_term);
  }
}

/**
 * Implements hook_preprocess_views_view__VIEW_ID().
 */
function nys_dashboard_preprocess_views_view__my_dashboard(&$variables) {
  $variables['#attached']['library'][] = 'nysenate_theme/my-dashboard';
}

/**
 * Implements hook_preprocess_views_view__VIEW_ID().
 */
function nys_dashboard_preprocess_views_view__updates_from_my_senator(&$variables) {
  $variables['#attached']['library'][] = 'nysenate_theme/nysenate-updates-from-my-senator';
}

/**
 * Implements hook_views_pre_build().
 */
function nys_dashboard_views_pre_build(ViewExecutable $view) {
  if ($view->id() == 'my_senator') {
    $current_user_district_tid = \Drupal::entityTypeManager()
      ->getStorage('user')
      ->load(\Drupal::currentUser()->id())
      ?->field_district
      ?->entity
      ?->id();
    $view->setArguments(["$current_user_district_tid"]);
  }
}

/**
 * Implements hook_entity_type_build().
 */
function nys_dashboard_entity_type_build(array &$entity_types) {
  $entity_types['user']->setFormClass('edit_account', 'Drupal\nys_dashboard\Form\EditAccountForm');
}
