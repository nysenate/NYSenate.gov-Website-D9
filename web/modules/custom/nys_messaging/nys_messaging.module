<?php

/**
 * @file
 * Contains custom code for Events and their Microsite Content.
 */

use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\Plugin\views\query\Sql;
use Drupal\views\ViewExecutable;
use Drupal\views\Views;

/**
 * Implements hook_mail().
 */
function nys_messaging_mail($key, &$message, $params) {
  $options = [
    'langcode' => $message['langcode'],
  ];

  switch ($key) {
    case 'forward_message':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['body'][] = $params['message'];
      break;
  }
}

/**
 * Implements hook_views_query_alter().
 */
function nys_messaging_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  $user_storage = \Drupal::entityTypeManager()->getStorage('user');

  if ($query instanceof Sql) {
    if ($view->id() == 'private_message_inbox') {
      foreach ($query->where as $key => $where) {
        // Join private_message__field_subject table.
        if (!empty($where['conditions'])) {
          foreach ($where['conditions'] as $c_key => $condition) {
            if ($condition['field'] == 'private_messages.message__value') {
              $configuration = [
                'type' => 'left',
                'table' => 'private_message__field_subject',
                'field' => 'entity_id',
                'left_table' => 'private_messages',
                'left_field' => 'id',
              ];
              $join = Views::pluginManager('join')->createInstance('standard', $configuration);
              $query->addRelationship('private_message__field_subject', $join, 'private_messages');

              // Search Subject value as well.
              $query->addWhere(
                $key,
                'private_message__field_subject.field_subject_value',
                $condition['value'],
                $condition['operator']
              );
              $query->where[$key]['type'] = 'OR';
            }
            elseif ($condition['field'] == 'node_field_data_private_message__field_bill.title') {
              // Search Bill Title.
              $bill_ids = [];
              $bills = \Drupal::database()->query(
                "SELECT n.nid FROM node_field_data n
                  WHERE n.title LIKE '%" . $condition['value'] . "%'"
              );
              $result = $bills->fetchAll();

              foreach ($result as $res) {
                if (!in_array($res->nid, $bill_ids)) {
                  $bill_ids[] = $res->nid;
                }
              }

              // Add an empty string is there are no bill_ids.
              $bill_ids = $bill_ids == [] ? [''] : $bill_ids;

              $query->where[$key]['conditions'][$c_key]['field'] = 'private_message__field_bill.field_bill_target_id';
              $query->where[$key]['conditions'][$c_key]['value'] = $bill_ids;
              $query->where[$key]['conditions'][$c_key]['operator'] = 'IN';
            }
            elseif ($view->current_display == 'inbox') {
              if ($condition['field'] == 'private_messages.owner') {
                // Search Owner's Name.
                $user_ids = [];
                $users = \Drupal::database()->query(
                  "SELECT u.uid FROM users u
                    LEFT JOIN users_field_data ufd ON ufd.uid = u.uid
                    LEFT JOIN user__field_first_name f ON f.entity_id = u.uid AND f.bundle = 'user'
                    LEFT JOIN user__field_last_name l ON l.entity_id = u.uid AND l.bundle = 'user'
                    WHERE ufd.name LIKE '%" . $condition['value'] . "%'
                      OR f.field_first_name_value LIKE '%" . $condition['value'] . "%'
                      OR l.field_last_name_value LIKE '%" . $condition['value'] . "%'"
                );
                $result = $users->fetchAll();

                foreach ($result as $res) {
                  if (!in_array($res->uid, $user_ids)) {
                    $user_ids[] = $res->uid;
                  }
                }

                if (!empty($user_ids)) {
                  $query->where[$key]['conditions'][$c_key]['value'] = $user_ids;
                  $query->where[$key]['conditions'][$c_key]['operator'] = 'IN';
                }
              }
              elseif ($condition['field'] == 'private_message__field_to.field_to_target_id = :private_message__field_to_field_to_target_id') {
                if (is_array($condition['value'])) {
                  $value = $condition['value'][':private_message__field_to_field_to_target_id'];
                  if (!is_numeric($value)) {
                    // Get uid from pathAlias.
                    $path = \Drupal::service('path_alias.manager')->getPathByAlias('/users/' . $value);

                    if (preg_match('/user\/(\d+)/', $path, $matches)) {
                      $query->where[$key]['conditions'][$c_key]['value'][':private_message__field_to_field_to_target_id'] = $matches[1];
                    }
                    else {
                      // Get user data from username.
                      $user = $user_storage->loadByProperties(['name' => $value]);
                      $user = reset($user);
                      $query->where[$key]['conditions'][$c_key]['value'][':private_message__field_to_field_to_target_id'] = $user->id();
                    }
                  }
                }
              }
            }
            elseif ($view->current_display == 'sent') {
              if ($condition['field'] == 'private_message__field_to.field_to_target_id') {
                // Search Sent To's Name.
                $user_ids = [];
                $users = \Drupal::database()->query(
                  "SELECT u.uid FROM users u
                      LEFT JOIN users_field_data ufd ON ufd.uid = u.uid
                      LEFT JOIN user__field_first_name f ON f.entity_id = u.uid AND f.bundle = 'user'
                      LEFT JOIN user__field_last_name l ON l.entity_id = u.uid AND l.bundle = 'user'
                    WHERE ufd.name LIKE '%" . $condition['value'] . "%'
                      OR f.field_first_name_value LIKE '%" . $condition['value'] . "%'
                      OR l.field_last_name_value LIKE '%" . $condition['value'] . "%'"
                );
                $result = $users->fetchAll();

                foreach ($result as $res) {
                  if (!in_array($res->uid, $user_ids)) {
                    $user_ids[] = $res->uid;
                  }
                }

                if (!empty($user_ids)) {
                  $query->where[$key]['conditions'][$c_key]['value'] = $user_ids;
                  $query->where[$key]['conditions'][$c_key]['operator'] = 'IN';
                }
              }
              elseif ($condition['field'] == 'private_messages.owner = :private_messages_owner') {
                if (is_array($condition['value'])) {
                  $value = $condition['value'][':private_messages_owner'];
                  if (!is_numeric($value)) {
                    // Get uid from pathAlias.
                    $path = \Drupal::service('path_alias.manager')->getPathByAlias('/users/' . $value);

                    if (preg_match('/user\/(\d+)/', $path, $matches)) {
                      $query->where[$key]['conditions'][$c_key]['value'][':private_messages_owner'] = $matches[1];
                    }
                    else {
                      // Get user data from username.
                      $user = $user_storage->loadByProperties(['name' => $value]);
                      $user = reset($user);
                      $query->where[$key]['conditions'][$c_key]['value'][':private_message__field_to_field_to_target_id'] = $user->id();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
