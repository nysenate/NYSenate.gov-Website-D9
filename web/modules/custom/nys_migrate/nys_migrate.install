<?php

/**
 * @file
 * Various hook implementations for NYS Migrate.
 */

/**
 * Implements hook_uninstall().
 */
function nys_migrate_uninstall() {
  // Note: make sure this list is kept current.
  $configs = [
    'migrate_drupal.settings',
    'migrate_plus.migration_group.default',
    'migrate_plus.migration_group.nys_general',
    'migrate_plus.migration.nys_senate_gov_taxonomy_term_issues',
    'migrate_plus.migration.nys_senate_gov_taxonomy_term_nys_counties',
    'migrate_plus.migration.nys_senate_gov_taxonomy_term_previous_version',
    'migrate_plus.migration.nys_senate_gov_taxonomy_term_participatory_budgeting_categories',
    'migrate_plus.migration.nys_senate_gov_taxonomy_term_districts',
    'migrate_plus.migration.nys_senate_gov_taxonomy_term_majority_issues',
    'migrate_plus.migration.nys_senate_gov_taxonomy_term_committees',
    'migrate_plus.migration.nys_senate_gov_taxonomy_term_senator',
    'migrate_plus.migration.nys_senate_gov_paragraph_featured_legislation_commi',
    'migrate_plus.migration.nys_senate_gov_paragraph_members',
    'migrate_plus.migration.nys_senate_gov_paragraph_group_members',
    'migrate_plus.migration.nys_senate_gov_media_image',
    'migrate_plus.migration.nys_senate_gov_managed_files',
    'migrate_plus.migration.nys_user',
    'migrate_plus.migration.nys_user_roles',
  ];
  $config_factory = \Drupal::configFactory();
  foreach ($configs as $config) {
    $config_factory->getEditable($config)->delete();
  }
}

/**
 * Implements hook_update_N().
 */
function nys_migrate_update_8001() {
  $node_ids = \Drupal::entityQuery('node')
    ->condition('nid', '9000000', '>')
    ->condition('type', ['bill', 'resolution'], 'IN')
    ->execute();

  if (!empty($node_ids)) {
    $storage_handler = \Drupal::entityTypeManager()->getStorage("node");
    foreach (array_chunk($node_ids, 50) as $chunk) {
      $nodes = $storage_handler->loadMultiple($chunk);
      $storage_handler->delete($nodes);
    }
  };
}

/**
 * Updates the Publish abd Status Date fields to match Drupal's expectations.
 */
function nys_migrate_update_8002() {
  $db = \Drupal::database();

  // Update Publish date.
  $result = $db->query("UPDATE node__field_ol_publish_date pd
    SET pd.field_ol_publish_date_value = DATE_FORMAT(FROM_UNIXTIME(pd.field_ol_publish_date_value), '%Y-%m-%dT%T')
    WHERE LENGTH(pd.field_ol_publish_date_value) < 19
    AND pd.bundle IN ('bill','resolution');");

  // Update Publish date revisions.
  $result = $db->query("UPDATE node_revision__field_ol_publish_date pd
    SET pd.field_ol_publish_date_value = DATE_FORMAT(FROM_UNIXTIME(pd.field_ol_publish_date_value), '%Y-%m-%dT%T')
    WHERE LENGTH(pd.field_ol_publish_date_value) < 19
    AND pd.bundle IN ('bill','resolution');");

  // Update Status Date.
  $result = $db->query("UPDATE node__field_ol_last_status_date sd
    SET sd.field_ol_last_status_date_value = DATE_FORMAT(sd.field_ol_last_status_date_value, '%Y-%m-%dT%T')
    WHERE sd.field_ol_last_status_date_value IS NOT NULL
    AND sd.field_ol_last_status_date_value <> ''
    AND sd.field_ol_last_status_date_value <> '1662041840'
    AND LENGTH(sd.field_ol_last_status_date_value) < 19
    AND sd.bundle IN ('bill','resolution');");

  // Update Status Date revisions.
  $result = $db->query("UPDATE node_revision__field_ol_last_status_date sd
    SET sd.field_ol_last_status_date_value = DATE_FORMAT(sd.field_ol_last_status_date_value, '%Y-%m-%dT%T')
    WHERE sd.field_ol_last_status_date_value IS NOT NULL
    AND sd.field_ol_last_status_date_value <> ''
    AND sd.field_ol_last_status_date_value <> '1662041840'
    AND LENGTH(sd.field_ol_last_status_date_value) < 19
    AND sd.bundle IN ('bill','resolution');");

}
