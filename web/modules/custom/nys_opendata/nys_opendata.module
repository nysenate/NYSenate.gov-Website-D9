<?php

/**
 * @file
 * Module nys_opendata.
 */

use Drupal\file\Entity\File;
use Drupal\nys_opendata\NysOpenDataCsv;

/**
 * Implements hook_preprocess_HOOK().
 *
 * Find any CSV files associated with open_data node types, and render
 * them with datatables.js.
 */
function nys_opendata_preprocess_node(&$variables) {
  // Act only on 'open_data' nodes.
  $node_type = $variables['node']->type ?? '';

  if ($node_type->target_id == 'open_data') {
    // Collector for all tables being rendered.
    $all_tables = [];

    // $count keeps the files in the same order.
    $count = 0;

    if (isset($variables['content']['field_open_data_file']['#items'])) {
      // Get items from datafile.
      $open_data_items = $variables['content']['field_open_data_file']['#items'];

      // Iterate through the associated file.
      foreach ($open_data_items as $one_file) {
        // Check if file is displayed.
        if ($one_file->isDisplayed()) {
          // Get the data.
          $file = NULL;
          $file_load = File::load($one_file->target_id);
          $this_fid = 0;

          if (($file_load->filemime->value ?? '') == 'text/csv') {
            $file = new NysOpenDataCsv($file_load->fid->value);
            $this_fid = $file_load->fid->value ?? 0;
          }

          if ($this_fid) {
            // Increment the weight/count.
            // Increment by two to account for the possibility of removed data.
            $count += 2;

            // Some references.
            $table_key = 'managed-csv-datatable-' . $this_fid;
            $caption = $one_file->description ?? '';

            // Generate the render array for this file.  Making a caption.
            // separate from dataTables is much more flexible.
            $all_tables[$table_key] = [
              '#attributes' => [
                'class' => [
                  'managed-csv-datatable-container',
                  $table_key,
                ],
                'data-fid' => $this_fid,
              ],
              '#type' => 'container',
              '#weight' => $count,
              'datatable_caption' => [
                '#markup' => $caption,
                '#prefix' => '<div class="managed-csv-datatable-caption">',
                '#suffix' => '</div>',
              ],

              'datatable' => $file->buildRenderArray() + [
                '#weight' => $count,
                '#attributes' => [
                  'class' => ['managed-csv-datatable'],
                ],
              ],
            ];

            // Extra information.
            if ($file->get('extra')) {
              $markup = array_map(
                function ($v) {
                  return implode(' ', $v);
                },
                $file->get('extra')
              );
              $all_tables[$table_key . '_removed'] = [
                '#markup' => preg_replace('/#[ ]+/', '', implode(" ", $markup)),
                '#prefix' => '<pre class="managed-csv-removed-data">',
                '#suffix' => '</pre>',
                '#weight' => $count - 1,
              ];
            }
          }
        }
      }

      // If any tables were rendered, add the datatables JS, CSS.
      // the initializer script. The collection array becomes
      // a parent container.
      if (count($all_tables)) {
        $all_tables += [
          '#attributes' => [
            'class' => ['managed-csv'],
          ],
          '#type' => 'container',
        ];
        // Render datatables.
        $variables['open_data_tables'] = \Drupal::service('renderer')->render($all_tables);
        $variables['#attached']['library'][] = 'nys_opendata/opendata';
      }
    }
  }
}
