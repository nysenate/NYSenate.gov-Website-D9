<?php

/**
 * @file
 * Custom functionality for the nys_school_forms module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;
use Drupal\views\ViewExecutable;
use Drupal\webform\WebformSubmissionInterface;

/**
 * @file
 * Custom functionality for the nys_school_forms module.
 */

/**
 * Implements hook_theme().
 */
function nys_school_forms_theme() {
  return [
    'school_forms' => [
      'variables' => [
        'search_form' => NULL,
        'entity_update_form' => NULL,
        'export_link' => NULL,
      ],
    ],
    'nys_school_forms__results_block' => [
      'variables' => [
        'content' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_access() for webform submission entity.
 *
 * Provides access control for the webform submission entity.
 */
function nys_school_forms_webform_submission_access(WebformSubmissionInterface $webform_submission, $op, $account) {
  // Check if the user is anonymous.
  if ($account->isAnonymous()) {
    return AccessResult::forbidden();
  }

  // Allow authenticated users to access the webform submission.
  return AccessResult::allowed();
}

/**
 * Implements hook_form_FORM_ID_alter.
 */
function nys_school_forms_form_node_student_submission_container_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Set and hide form type field if default available from context.
  $current_path = \Drupal::requestStack()->getCurrentRequest()->getPathInfo();
  if ($current_path != '/node/add/student_submission_container') {
    $form['field_form_type']['#access'] = FALSE;
  }
  if ($current_path == '/questionnaires/what-are-you-thankful') {
    $form_type = 'thanksgiving';
    $form['field_form_type']['widget']['#default_value'] = $form_type;
  }
  elseif ($current_path == '/earthday') {
    $form_type = 'earth_day';
    $form['field_form_type']['widget']['#default_value'] = $form_type;
  }

  // Custom validation to make only one upload field required.
  $form['#validate'][] = '_nys_school_forms_validate_ss_container_form';

  // Custom submit handler to alter redirect and success message.
   $form['actions']['submit']['#submit'][] = '_nys_school_forms_ss_container_submit_handler';

  // Disable form if not in submission period.
  $is_form_active = FALSE;
  $form_open_time = strtotime(\Drupal::state()->get('nys_school_forms.submission_periods')[$form_type]['begin']);
  $form_close_time = strtotime(\Drupal::state()->get('nys_school_forms.submission_periods')[$form_type]['end']);
  if ($form_open_time <= time() && $form_close_time >= time()) {
    $is_form_active = TRUE;
  }
  if (!$is_form_active) {
    foreach ($form as $key => $value) {
      // Removes all input fields.
      if (!str_starts_with($key, '#')) {
        unset($form[$key]);
      }
    }
    $form['#attached']['library'][] = 'rain_theme/message';
    $form['#markup'] = <<<HTML
    <div role="contentinfo" aria-label="Status message" class="message message--status">
      <h2 class="visually-hidden message__heading">Status message</h2>
        <ul class="messages__list">
          <li class="messages__item">The submission period is currently closed.</li>
      </ul>
    </div>
  HTML;
  }
}

/**
 * Implements hook_inline_entity_form_entity_form_alter.
 */
function nys_school_forms_inline_entity_form_entity_form_alter(&$form, FormStateInterface $form_state) {
  // Display image / file upload field based on prior selection.
  $upload_types = ['image', 'file'];
  foreach ($upload_types as $type) {
    $trigger = [":input[name='field_student_submissions[{$form['#ief_row_delta']}][inline_entity_form][field_upload_type]']" => ['value' => $type]];
    $form["field_{$type}_submission"]['#states'] = [
      'visible' => $trigger,
    ];
  }

  // Enable submission type field for thanksgiving form.
  $current_path = \Drupal::requestStack()->getCurrentRequest()->getPathInfo();
  if ($current_path == '/questionnaires/what-are-you-thankful') {
    $form['field_submission_type']['widget']['#required'] = TRUE;
  }
  elseif ($current_path == '/earthday') {
    $form['field_submission_type']['#access'] = FALSE;
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for views_exposed_form.
 */
function nys_school_forms_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form['#id'] === 'views-exposed-form-display-student-submissions-block-1') {
    // Set submission year filter to current year, if no user input.
    $user_input = $form_state->getUserInput();
    $default_empty_fields = ['title', 'field_student_name_value', 'created'];
    $default_empty_fields_empty = empty(array_filter(array_intersect_key($user_input, array_flip($default_empty_fields))));
    if ($default_empty_fields_empty && $user_input['field_grade_value'] === 'All') {
      $form_state->setUserInput(['created' => date('Y')]);
    }
  }
}

/**
 * Implements hook_views_pre_view().
 */
function nys_school_forms_views_pre_view(ViewExecutable $view, $display_id, &$args) {
  if ($view->id() === 'display_student_submissions' && $display_id === 'block_1') {
    $aliased_path = \Drupal::requestStack()->getCurrentRequest()->getPathInfo();
    $source_path = \Drupal::service('path_alias.manager')->getPathByAlias($aliased_path);

    // Contextual filter to limit results to proper form type.
    $form_type = substr($aliased_path, strrpos($aliased_path, '/') + 1);
    switch ($form_type) {
      case 'earthday':
        $args[0] = 'earth_day';
        break;
      case 'thankful':
        $args[0] = 'thanksgiving';
        break;
    }

    // Contextual filter to limit results to schools in senator's district.
    if (preg_match('/^\/node\/(\d+)$/', $source_path, $matches)) {
      $node_id = $matches[1];
      $microsite_node = Node::load($node_id);
      if (
        $microsite_node instanceof \Drupal\node\NodeInterface
        && !empty($microsite_node->field_senator_multiref->target_id)
      ) {
        $args[1] = $microsite_node->field_senator_multiref->target_id;
      }
    }
  }
}

/**
 * Custom validation to make only one upload field required.
 */
function _nys_school_forms_validate_ss_container_form(array &$form, FormStateInterface $form_state) {
  $student_submissions = $form_state->getValue('field_student_submissions');
  $errors = $form_state->getErrors();
  unset($errors['submit']);
  $upload_types = ['image', 'file'];
  foreach ($upload_types as $type) {
    foreach ($student_submissions as $key => $submission) {
      if (
        !is_array($submission)
        || !isset($submission['inline_entity_form']['field_upload_type'][0]['value'])
      ) {
        continue;
      }
      $upload_type = $submission['inline_entity_form']['field_upload_type'][0]['value'];
      $field_key = "field_student_submissions][$key][inline_entity_form][field_{$type}_submission][0";
      if (
        $upload_type != $type
        && isset($errors[$field_key])
      ) {
        $form_state->clearErrors();
        unset($errors[$field_key]);
      }
    }
  }
  foreach ($errors as $field_name => $message) {
    $form_state->setErrorByName($field_name, $message);
  }
}

/**
 * Custom submit handler for custom redirect.
 */
function _nys_school_forms_ss_container_submit_handler(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $form_state->setRedirect('<front>');
  \Drupal::messenger()->addMessage(t('Your student submission has been received.'));
}
