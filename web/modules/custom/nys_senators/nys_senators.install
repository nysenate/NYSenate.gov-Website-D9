<?php

/**
 * @file
 * Create 'Microsite Page Type' taxonomy terms programmatically.
 */

use Drupal\block_content\Entity\BlockContent;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_update_N().
 */
function nys_senators_update_9001() {

  $about = Term::create([
    'name' => 'About',
    'vid' => 'microsite_page_type',
  ]);
  $about->set('field_microsite_menu_weight', 0);
  $about->save();

  $our_district = Term::create([
    'name' => 'Our District',
    'vid' => 'microsite_page_type',
  ]);
  $our_district->set('field_microsite_menu_weight', 1);
  $our_district->save();

  $news_room = Term::create([
    'name' => 'Newsroom',
    'vid' => 'microsite_page_type',
  ]);
  $news_room->set('field_microsite_menu_weight', 2);
  $news_room->save();

  $legislation = Term::create([
    'name' => 'Legislation',
    'vid' => 'microsite_page_type',
  ]);
  $legislation->set('field_microsite_menu_weight', 3);
  $legislation->save();

  $events = Term::create([
    'name' => 'Events',
    'vid' => 'microsite_page_type',
  ]);
  $events->set('field_microsite_menu_weight', 4);
  $events->save();
}

/**
 * Implements hook_update_N().
 */
function nys_senators_update_9002() {
  $events = Term::create([
    'name' => 'Landing',
    'vid' => 'microsite_page_type',
  ]);
  $events->save();
}

/**
 * Implements hook_update_N().
 */
function nys_senators_update_9003() {
  $contact = Term::create([
    'name' => 'Contact',
    'vid' => 'microsite_page_type',
  ]);
  $contact->save();
  $contact->set('field_microsite_menu_weight', 5);
  $contact->save();
}

/**
 * Add Senator microsite pages for existing terms.
 */
function nys_senators_update_9004() {
  // Queries all senator terms that are published and active.
  $senator_terms = \Drupal::service('entity_type.manager')->getStorage('taxonomy_term')->loadByProperties([
    'vid' => 'senator',
    'status' => 1,
    'field_active_senator' => TRUE,
  ]);

  // Iterates through each senator term.
  foreach ($senator_terms as $senator_term) {
    // Queries looking for microsite pages that reference the term in senator
    // multiref field.
    $query = \Drupal::entityQuery('node')
      ->accessCheck(FALSE)
      ->condition('type', 'microsite_page')
      ->condition('field_senator_multiref', [$senator_term->id()], 'IN')
      ->execute();

    // Creates the senator microsites pages if the query return empty.
    if (empty($query)) {
      _nys_senators_create_senator_microsites($senator_term);
    }
  }
}

/**
 * Implements hook_update_N().
 */
function nys_senators_update_9005() {
  $term = Term::create([
    'name' => 'Inactive',
    'vid' => 'microsite_page_type',
  ]);
  $term->save();
}

/**
 * Add Senator Contact block to microsite Contact pages on active senators.
 */
function nys_senators_update_9006() {
  // Creates the default Microsite Contact Webform block to be attached to the
  // existing microsite nodes.
  $senatorContactBlock = BlockContent::create([
    'info' => 'Senator contact form - Microsite Contact block',
    'type' => 'microsite_contact_webform',
    'revision_user' => 1,
    'field_contact_webform' => [
      'target_id' => 'senator_contact_webform',
      'default_data' => '',
      'status' => 'open',
      'open' => '',
      'close' => '',
    ],
  ]);
  $senatorContactBlock->save();

  // Queries all senator terms that are published and active.
  $senator_terms = \Drupal::service('entity_type.manager')->getStorage('taxonomy_term')->loadByProperties([
    'vid' => 'senator',
    'status' => 1,
    'field_active_senator' => TRUE,
  ]);

  // Iterates through each senator term.
  foreach ($senator_terms as $senator_term) {
    // Queries looking for microsite pages that reference the term in senator
    // multiref field and Contact pages only.
    $query = \Drupal::entityQuery('node')
      ->accessCheck(FALSE)
      ->condition('type', 'microsite_page')
      ->condition('field_senator_multiref', [$senator_term->id()], 'IN')
      // Query the Contact term page.
      ->condition('field_microsite_page_type', 93784, '=')
      ->execute();

    // Appends the Contact Webform block to the microsite pages.
    if (!empty($query)) {
      $nid = reset($query);
      $node = Node::load($nid);
      if ($node instanceof NodeInterface) {
        $node->get('field_block')->appendItem($senatorContactBlock);
        $node->save();
      }
    }
  }
}
