<?php

/**
 * @file
 * Contains custom code for Users and User entities within NY Senate.
 */

use Drupal\Component\Utility\DiffArray;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\UserInterface;

/**
 * Implements hook_form_alter().
 */
function nys_users_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $account = \Drupal::currentUser();
  // Fetch the User's roles.
  $user_roles = $account->getRoles();

  // On User create/edit forms make Senator field visible on the MCP Role.
  if ($form_id === 'user_form' || $form_id === 'user_register_form') {

    // Adds visible and required states.
    $form['field_senator_multiref']["widget"]['#states'] = [
      'visible' => [
        'input[name="roles[microsite_content_producer]"]' => ['checked' => TRUE],
      ],
      'required' => [
        'input[name="roles[microsite_content_producer]"]' => ['checked' => TRUE],
      ],
    ];
    // Disable the field if the user has a role microsite
    // content producer so they can't edit it!
    if (in_array('microsite_content_producer', $user_roles, FALSE) and !in_array('administrator', $user_roles, FALSE)) {
      $form['field_senator_multiref']['#disabled'] = TRUE;
    }
  }
}

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function nys_users_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) {

  // If on User form, add constraint to the Senator field for validation.
  if ($entity_type->get('id') === 'user' && !empty($fields['field_senator_multiref'])) {

    $fields['field_senator_multiref']->addConstraint('RequiredSenator');

  }
}

/**
 * Adds/removes the 'constituent' role based on user's address.
 */
function nys_users_user_presave(UserInterface $user): void {
  // Fetch the User's roles.
  $current_user_roles = \Drupal::currentUser()->getRoles();

  if ($state = ($user->field_address->administrative_area ?? '')) {
    if ($state === 'NY') {
      $user->addRole('constituent');
    }
    else {
      $user->removeRole('constituent');
    }
  }

  if (in_array('administrator', $current_user_roles, FALSE)) {
    if (!empty($user->id())) {
      // Get updated fields.
      $updated = array_keys(DiffArray::diffAssocRecursive($user->toArray(), $user->original->toArray()));

      // Check if field_address is updated.
      if (in_array('field_address', $updated)) {
        $address = $user->field_address->getValue()[0];
        $district = \Drupal::service('nys_registration.helper')->getDistrictFromAddress($address);
        $district_id = $district?->id();
        $user->set('field_district', $district_id);
      }
    }
  }
}
