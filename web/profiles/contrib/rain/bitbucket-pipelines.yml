
image: mediacurrent/mc-bb-pipelines:latest

pipelines:
  default:
    - step:
        caches:
          - composer
          # - composer-project-vendor
        script:
          - uname -a
          - mkdir -p /root/.ssh
          - echo "bitbucket.org,104.192.143.2 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==" >> /root/.ssh/known_hosts
          - echo -e "$SSH_ID_RSA" >> ~/.ssh/id_rsa
          - chmod 600 ~/.ssh/id_rsa
          - echo -e "$SSH_ID_RSA_PUB" >> ~/.ssh/id_rsa.pub
          - chmod 600 ~/.ssh/id_rsa.pub
          - chmod 700 ~/.ssh
          - php --version
          - source /root/.bashrc
          - git clone git@bitbucket.org:mediacurrent/mis_rain_ddev.git
          # Check against the develop branch
          - cd mis_rain_ddev
          - git checkout 9.x-lb
          - composer selfupdate
          - composer validate --no-check-all --no-check-publish
          - composer --verbose install
          - composer require mediacurrent/rain:${BITBUCKET_BRANCH}-dev --update-with-all-dependencies
          - ls -l ./bin
          - ./bin/behat --version
          - ./bin/drush version
          - ./bin/phpunit --version
          - composer robo --version
          - composer robo list
          - composer robo project:init example.mcdev 127.0.0.1
          # - nvm install v7.4.0
          # - nvm use v7.4.0
          # Drupal coding standards test on custom modules
          - echo "Coding Standards"
          - ./tests/code-sniffer.sh ./web
          # - CMD=$(./tests/code-sniffer.sh ./web 2>&1) && echo ${CMD}|| ( slackcli -h alerts-mis-devops -e ":rage3:" -m "https://bitbucket.org/mediacurrent/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/ ${BITBUCKET_BRANCH} error - \`\`\`${CMD}\`\`\`" && echo ${CMD} && exit 1 )
          - echo "PHPUnit unit tests"
          - if [ "$(ls -A web/modules/custom/)" ]; then
          - composer robo test:php-unit-tests
          - fi
          - echo "Drupal-check custom modules for Drupal 9 readiness"
          - if [ "$(ls -A web/modules/custom/)" ]; then
          - ./bin/drupal-check ./web/modules/custom/
          - fi
          - printf "127.0.0.1 example.mcdev" >> /etc/hosts
          - cd ./web
          # # Check for pending security updates.
          # - PMSECURITY=$(../bin/drush pm:security 2>&1)
          # - echo ${PMSECURITY}
          # - if grep -vq '[success]' <<< ${PMSECURITY} ; then
          # - slackcli -h alerts-mis-devops -e ":lock:" -m "https://bitbucket.org/mediacurrent/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/$BITBUCKET_BUILD_NUMBER - ${BITBUCKET_BRANCH} - pm:security \`\`\`${PMSECURITY}\`\`\`"
          # # - exit 1
          # - fi
          # Install site using options to disable email notification.
          - echo "\$config['system.mail']['interface']['default'] = 'test_mail_collector';" >> ./sites/default/settings.php
          - /usr/bin/env PHP_OPTIONS="-d sendmail_path=$(which true)" ../bin/drush site-install rain_demo install_configure_form.enable_update_status_module=NULL install_configure_form.enable_update_status_emails=NULL --verbose --yes --db-url=mysql://drupal:drupal@127.0.0.1:3306/drupal
          # - /usr/bin/env PHP_OPTIONS="-d sendmail_path=$(which true)" ../bin/drush site-install config_installer install_configure_form.enable_update_status_module=NULL install_configure_form.enable_update_status_emails=NULL --verbose --yes --db-url=mysql://drupal:drupal@127.0.0.1:3306/drupal
          - ../bin/drush status
          - ../bin/drush sget system.test_mail_collector
          - ../bin/drush sql-dump > ../bin/db.sql
          - cd ..
        services:
          - mysql
        artifacts:
          - mis_rain_ddev/**
          # - bin/*
          # - vendor/**
          # - web/core/**
          # - web/modules/contrib/**
          # - web/themes/contrib/**
          # - web/sites/default/files/**
          # - web/sites/default/settings.php
    - parallel:
      - step:
          script:
            - cd mis_rain_ddev
            - ls -l
            - ls -l ./bin
            - cd web
            - ../bin/drush sqlc < ../bin/db.sql
            - ../bin/drush status
            - ../bin/drush -vvv --debug runserver 8080 &
            - sleep 3
            - cd ..
            # Drupal accessibiity tests
            - echo "Accessibility tests"
            - pa11y --version
            # - ./tests/pa11y/pa11y-review.sh http://127.0.0.1:8080/themes/contrib/rain_theme/dist/style-guide/section-components.html
            # - CMD=$(./tests/pa11y/pa11y-review.sh http://127.0.0.1:8080/themes/contrib/rain_theme/dist/style-guide/section-components.html 2>&1) && echo ${CMD}|| ( slackcli -h alerts-mis-devops -e ":rage3:" -m "https://bitbucket.org/mediacurrent/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/$BITBUCKET_BUILD_NUMBER ${BITBUCKET_BRANCH} error - \`\`\`${CMD}\`\`\`" && echo ${CMD} && exit 1 )
            # Drupal behat tests
            - echo "Behat tests"
            # - ./tests/behat/behat-run.sh http://127.0.0.1:8080
            # - CMD=$(./tests/behat/behat-run.sh http://127.0.0.1:8080 2>&1) && echo ${CMD}|| ( slackcli -h alerts-mis-devops -e ":rage3:" -m "https://bitbucket.org/mediacurrent/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/$BITBUCKET_BUILD_NUMBER ${BITBUCKET_BRANCH} error - \`\`\`${CMD}\`\`\`" && echo ${CMD} && exit 1 )
          services:
            - mysql
      - step:
          caches:
            - docker
          script:
            - cd mis_rain_ddev/web
            - ../bin/drush sqlc < ../bin/db.sql
            - ../bin/drush status
            - ../bin/drush -vvv --debug runserver 172.17.0.1:8080 &
            - cd ..
            # OWASP Zap Baseline report
            - echo "OWASP ZAP Baseline report"
            - docker version
            # Set script to continue on failure.
            - set +e
            - ln -s $(pwd) /zap/wrk
            - ls -l /zap/wrk/
            # - /zap/zap-baseline.py -c owasp-zap.conf -p owasp-zap-progress.json -t http://127.0.0.1:8080
            - CMD=$(/zap/zap-baseline.py -d -c owasp-zap.conf -p owasp-zap-progress.json -t http://172.17.0.1:8080) && echo ${CMD}|| ( slackcli -h alerts-rain -e ":lock:" -m "https://bitbucket.org/mediacurrent/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/$BITBUCKET_BUILD_NUMBER - ${BITBUCKET_BRANCH} - OWASP Zap Baseline report \`\`\`${CMD}\`\`\`" && echo ${CMD} && exit 1 )
            # Set script to stop on failure.
            - set -e
            # Run Security Review checks
            - cd web
            # Check security review.
            - ../bin/drush en security_review -y
            - SECURITYREVIEW=$(../bin/drush secrev --skip=failed_logins,file_perms,views_access,trusted_hosts 2>&1)
            - echo ${SECURITYREVIEW}
            - if grep -q 'failed' <<< ${SECURITYREVIEW} ; then
            - slackcli -h alerts-mis-devops -e ":lock:" -m "https://bitbucket.org/mediacurrent/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/$BITBUCKET_BUILD_NUMBER - ${BITBUCKET_BRANCH} - secrev \`\`\`${SECURITYREVIEW}\`\`\`"
            - exit 1
            - fi
          services:
            - docker
            - mysql
      - step:
          caches:
            - docker
            - visual-regression-ci-reference
            - visual-regression-node-modules
          script:
            - cd mis_rain_ddev
            - aws --version
            - ls -l
            - ls -l ./bin
            - cd web
            - ../bin/drush sqlc < ../bin/db.sql
            - ../bin/drush status
            - ../bin/drush -vvv --debug runserver 172.17.0.1:8080 &
            - sleep 3
            - cd ..
            - cd tests/visual-regression
            - chmod -R o+w ./backstop_data
            - npm install
            - set +e
            # Generate new reference if needed
            - if [ ! "$(ls -A backstop_data/ci_reference)" ]; then
            - aws s3 cp s3://mis-ci-tests/vrt/reference-${BITBUCKET_REPO_SLUG} backstop_data --recursive
            - if [ ! "$(ls -A backstop_data/ci_reference)" ]; then
            - make -i ci-reference
            - fi
            - fi
            - make -i ci-test
            - aws s3 cp backstop_data s3://mis-ci-tests/vrt/test-${BITBUCKET_REPO_SLUG}-${BITBUCKET_BUILD_NUMBER} --recursive
            # link to results posted to Bitbucket
            - export VRT_URL="http://vrt.mediacurrentstaging.info/test-${BITBUCKET_REPO_SLUG}-${BITBUCKET_BUILD_NUMBER}/ci_html_report/"
            - export BUILD_STATUS="{\"key\":\"doc\", \"state\":\"SUCCESSFUL\", \"name\":\"VRT Results\", \"url\":\"${VRT_URL}\"}"
            - curl -H "Content-Type:application/json" -X POST --user "${BB_AUTH_STRING}" -d "${BUILD_STATUS}" "https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/commit/${BITBUCKET_COMMIT}/statuses/build"
            # Use current develop as reference
            - if [ "${BITBUCKET_BRANCH}" == "develop" ]; then
            - make -i ci-approve;
            - aws s3 cp backstop_data s3://mis-ci-tests/vrt/reference-${BITBUCKET_REPO_SLUG} --recursive
            - fi
          services:
            - docker
            - mysql
          artifacts:
            - tests/visual-regression/backstop_data/**


definitions:
  caches:
    # composer-project-vendor: mis_rain_ddev/vendor/
    visual-regression-ci-reference: mis_rain_ddev/tests/visual-regression/backstop_data/ci_reference
    visual-regression-node-modules: mis_rain_ddev/tests/visual-regression/node_modules
  services:
    docker:
      memory: 2048
    mysql:
      image: mysql:5.7
      environment:
        MYSQL_DATABASE: 'drupal'
        MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        MYSQL_USER: 'drupal'
        MYSQL_PASSWORD: 'drupal'
