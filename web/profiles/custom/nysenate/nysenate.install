<?php

/**
 * @file
 * Install, update and uninstall hooks for the mcprofile install profile.
 */

use Drupal\menu_link_content\Entity\MenuLinkContent;
use Drupal\taxonomy\Entity\Term;
use Drupal\media\Entity\Media;
use Drupal\file\Entity\File;

/**
 * NYSD9-372: Set the label of List Views block content type.
 */
function nysenate_update_9001() {
  $bcid = \Drupal::entityQuery('block_content')
    ->condition('type', 'views')->execute();

  if (!empty($bcid)) {
    $list_views = \Drupal::entityTypeManager()
      ->getStorage('block_content')
      ->loadMultiple($bcid);

    foreach ($list_views as $view) {
      if ($view->hasField('field_title') && !$view->get('field_title')->isEmpty()) {
        $title = $view->field_title->value;
        $label_field = $view->getEntityType()->getKey('label');
        $view->set($label_field, 'Views: ' . $title);
        $view->save();
      }
    }
  }
}

/**
 * NYSD9-434: Update the senator events block content.
 */
function nysenate_update_9002() {
  $bcid = \Drupal::entityQuery('block_content')
    ->condition('type', 'views')->execute();

  if (!empty($bcid)) {
    $list_views = \Drupal::entityTypeManager()
      ->getStorage('block_content')
      ->loadMultiple($bcid);

    foreach ($list_views as $view) {
      if ($view->hasField('field_views_ref') && !$view->get('field_views_ref')->isEmpty()) {
        // Replace the microsite content (event)
        // with the senator events (upcoming events).
        if ($view->field_views_ref->target_id == 'senator_microsite_content' &&
        $view->field_views_ref->__get('display_id') == 'microsite_events_content') {
          $view->field_views_ref->target_id = 'senator_events';
          $view->field_views_ref->__set('display_id', 'upcoming_events');
          $view->save();
        }
      }
    }
  }
}

/**
 * Add Message term in microsite pages vocabulary.
 */
function nysenate_update_9003() {
  Term::create([
    'name' => 'Message',
    'vid' => 'microsite_page_type',
  ])->save();
}

/**
 * Add links to Social Menu.
 */
function nysenate_update_9004() {
  $menu_storage = \Drupal::entityTypeManager()->getStorage('menu_link_content');
  $menu_name = 'socials';

  $links = [
    'facebook' => 'https://www.facebook.com/nysenate',
    'twitter' => 'https://www.twitter.com/nysenate',
    'youtube-2' => 'https://www.youtube.com/user/NYSenate',
  ];

  foreach ($links as $title => $url) {
    $menu_link = $menu_storage->loadByProperties([
      'title' => $title,
      'menu_name' => $menu_name,
    ]);

    // Update socials menu item link.
    if ($menu_link) {
      $menu_link = reset($menu_link);
      $menu_link->set('link', ['uri' => $url]);
      $menu_link->save();
    }

    // Create socials menu item.
    else {
      $menu_link = MenuLinkContent::create([
        'title' => $title,
        'menu_name' => $menu_name,
        'link' => ['uri' => $url],
      ]);
      $menu_link->save();
    }
  }
}

/**
 * NYSD9-622: Upload Bill Share image.
 */
function nysenate_update_9005() {
  // Load the file from a local path.
  $file_path = 'public://ny_senate_bill_share2.png';
  $file = File::create([
    'uri' => $file_path,
  ]);
  $file->save();

  // Create a new media entity for the uploaded image.
  $media = Media::create([
    'bundle' => 'image',
    'uid' => 1,
    'status' => 1,
    'name' => 'ny_senate_bill_share2.png',
    'field_image' => [
      'target_id' => $file->id(),
    ],
  ]);

  // Save the media entity to the database.
  $media->save();

  $media_file = !empty($media->field_image->target_id) ? File::load($media->field_image->target_id) : NULL;
  if (!empty($media_file)) {
    $image = \Drupal::service('file_url_generator')->generateAbsoluteString($media_file->getFileUri());

    // Load the node metatag config entity.
    $config = \Drupal::configFactory()->getEditable('metatag.metatag_defaults.node__bill');

    // Set the image field to reference the media entity.
    $config->set('tags.image_src', $image);

    // Save the changes to the config entity.
    $config->save();
  }
}
