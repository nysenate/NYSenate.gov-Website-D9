<?php

/**
 * @file
 * Functions to support theming in the rain_admin theme.
 */

/**
 * Implements hook_theme_suggestions_node_edit_form_alter().
 */
function rain_admin_theme_suggestions_node_edit_form_alter(array &$suggestions, array $variables) {
  $route_match = \Drupal::routeMatch();

  if ($node = $route_match->getParameter('node')) {
    // When editing an existing node, add the
    // node bundle as the theme hook suggestion.
    $suggestions[] = $variables['theme_hook_original'] . '__' . $node->bundle();
  }
  elseif ($node_type = $route_match->getParameter('node_type')) {
    // When a new node is created, the node type
    // (object) is provided.
    $suggestions[] = $variables['theme_hook_original'] . '__' . $node_type->id();
  }

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function rain_admin_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  // Special template for wysiwyg data payload.
  $view_mode = $variables['element']['#view_mode'];
  $field_type = $variables['element']['#field_type'];

  if ($view_mode === 'frontend_payload' && $field_type === 'text_long') {
    $suggestions[] = 'field__rich_text_payload';
  }
}

/**
 * Implements hook_preprocess_select().
 */
function rain_admin_preprocess_select(array &$variables) {
  _rain_admin_use_aria_required($variables);
}

/**
 * Implements hook_preprocess_input().
 */
function rain_admin_preprocess_input(array &$variables) {
  _rain_admin_use_aria_required($variables);
}

/**
 * Implements hook_preprocess_textarea().
 */
function rain_admin_preprocess_textarea(array &$variables) {
  _rain_admin_use_aria_required($variables);
}

/**
 * Transfer the value of the "required" attribute to "aria-required".
 *
 * @param array $variables
 *   Theme variables.
 */
function _rain_admin_use_aria_required(array &$variables) {
  if (!empty($variables['attributes']['required'])) {
    $variables['attributes']['aria-required'] = 'true';
    unset($variables['attributes']['required']);
  }
}

/**
 * Implements hook_theme_suggestions_paragraph_alter().
 */
function rain_admin_theme_suggestions_paragraph_alter(array &$suggestions, array $variables) {
  $view_mode = $variables['elements']['#view_mode'];
  $paragraph = $variables['elements']['#paragraph'];

  $suggestions[] = 'paragraph--' . $paragraph->bundle() . '--' . $view_mode;
}
