{"version":3,"sources":["src/patterns/pages/dashboard/dashboard.es6.js"],"names":["document","Drupal","$","behaviors","dashboard","attach","context","win","window","origNav","self","once","each","nav","clone","attr","addClass","headerBar","find","sidebarToggle","sidebar","sidebarToggleInit","prependTo","css","alignPosition","scroll","debounce","checkTopBarState","initToolbarObserver","doc","currentTop","scrollTop","outerHeight","hasClass","removeClass","orig","origTop","position","top","err","targetNode","config","attributes","childList","subtree","callback","mutationList","mutation","attributeName","target","localName","observer","MutationObserver","observe","disconnect","jQuery"],"mappings":"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","sourcesContent":["/**\n * @file\n * Behaviors for the Dashboard Header.\n */\n/* eslint-disable max-len */\n\n!((document, Drupal, $) => {\n  'use strict';\n\n  /**\n   * Setup and attach the Dashboard Header behaviors.\n   *\n   * @type {Drupal~behavior}\n   */\n  Drupal.behaviors.dashboard = {\n    attach: function (context) {\n      if (context !== document) {\n        return;\n      }\n\n      const win = $(window);\n      const origNav = $('#js-sticky--dashboard', context);\n      const self = this;\n\n      origNav.once('navigation').each(function () {\n        const nav = origNav\n          .clone()\n          .attr('id', 'js-sticky--dashboard--clone')\n          .addClass('fixed');\n\n        const headerBar = nav.find('.c-header-bar');\n\n        const sidebarToggle = nav.find('.sidebar-toggle');\n        sidebarToggle.each(Drupal.behaviors.sidebar.sidebarToggleInit);\n\n        // place clone\n        nav.prependTo('.page').css({\n          'z-index': '100'\n        });\n\n        self.alignPosition(origNav, nav);\n\n        win.scroll(\n          Drupal.debounce(() => self.checkTopBarState(nav, headerBar), 300)\n        );\n\n        self.initToolbarObserver(origNav, nav, self.alignPosition);\n      });\n    },\n\n    checkTopBarState: function (nav, headerBar) {\n      let doc = $(document);\n      let currentTop = doc.scrollTop();\n\n      if (currentTop > nav.outerHeight() && !headerBar.hasClass('collapsed')) {\n        headerBar.addClass('collapsed');\n      }\n      else if (\n        currentTop <= nav.outerHeight() &&\n        headerBar.hasClass('collapsed')\n      ) {\n        headerBar.removeClass('collapsed');\n      }\n    },\n    alignPosition: function (orig, clone) {\n      try {\n        const origTop = orig.position().top;\n        clone.css('top', `${typeof origTop === 'number' ? origTop : 0}px`);\n      }\n      catch (err) {\n        return err;\n      }\n    },\n    initToolbarObserver: function (origNav, nav, alignPosition) {\n      // Select the node that will be observed for mutations\n      const targetNode = $('body');\n\n      // Options for the observer (which mutations to observe)\n      const config = { attributes: true, childList: true, subtree: true };\n\n      // Callback function to execute when mutations are observed\n      const callback = (mutationList) => {\n        for (const mutation of mutationList) {\n          if (\n            mutation.attributeName === 'style' &&\n            mutation.target.localName === 'body'\n          ) {\n            alignPosition(origNav, nav);\n          }\n        }\n      };\n\n      // Create an observer instance linked to the callback function\n      const observer = new MutationObserver(callback);\n\n      try {\n        // Start observing the target node for configured mutations\n        targetNode.each(function () {\n          observer.observe(this, config);\n        });\n      }\n      catch (err) {\n        observer.disconnect();\n        return err;\n      }\n    }\n  };\n})(document, Drupal, jQuery);\n"],"file":"dashboard.es6.js"}