{"version":3,"sources":["src/vendor/hammerjs/jquery.hammer.js"],"names":["factory","define","amd","exports","require","jQuery","Hammer","$","hammerify","el","options","$el","data","fn","hammer","each","Manager","prototype","emit","originalEmit","type","call","element","trigger","gesture"],"mappings":";;AAAC,WAASA,OAAT,EAAkB;AACjB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC9CD,IAAAA,MAAM,CAAC,CAAC,QAAD,EAAW,UAAX,CAAD,EAAyBD,OAAzB,CAAN;AACD,GAFD,MAGK,IAAI,QAAOG,OAAP,yCAAOA,OAAP,OAAmB,QAAvB,EAAiC;AACpCH,IAAAA,OAAO,CAACI,OAAO,CAAC,QAAD,CAAR,EAAoBA,OAAO,CAAC,UAAD,CAA3B,CAAP;AACD,GAFI,MAGA;AACHJ,IAAAA,OAAO,CAACK,MAAD,EAASC,MAAT,CAAP;AACD;AACF,CAVA,EAUC,UAASC,CAAT,EAAYD,MAAZ,EAAoB;AACpB,WAASE,SAAT,CAAmBC,EAAnB,EAAuBC,OAAvB,EAAgC;AAC9B,QAAIC,GAAG,GAAGJ,CAAC,CAACE,EAAD,CAAX;;AACA,QAAG,CAACE,GAAG,CAACC,IAAJ,CAAS,QAAT,CAAJ,EAAwB;AACtBD,MAAAA,GAAG,CAACC,IAAJ,CAAS,QAAT,EAAmB,IAAIN,MAAJ,CAAWK,GAAG,CAAC,CAAD,CAAd,EAAmBD,OAAnB,CAAnB;AACD;AACF;;AAEDH,EAAAA,CAAC,CAACM,EAAF,CAAKC,MAAL,GAAc,UAASJ,OAAT,EAAkB;AAC9B,WAAO,KAAKK,IAAL,CAAU,YAAW;AAC1BP,MAAAA,SAAS,CAAC,IAAD,EAAOE,OAAP,CAAT;AACD,KAFM,CAAP;AAGD,GAJD,CARoB,CAcpB;;;AACAJ,EAAAA,MAAM,CAACU,OAAP,CAAeC,SAAf,CAAyBC,IAAzB,GAAiC,UAASC,YAAT,EAAuB;AACtD,WAAO,UAASC,IAAT,EAAeR,IAAf,EAAqB;AAC1BO,MAAAA,YAAY,CAACE,IAAb,CAAkB,IAAlB,EAAwBD,IAAxB,EAA8BR,IAA9B;AACAL,MAAAA,CAAC,CAAC,KAAKe,OAAN,CAAD,CAAgBC,OAAhB,CAAwB;AACtBH,QAAAA,IAAI,EAAEA,IADgB;AAEtBI,QAAAA,OAAO,EAAEZ;AAFa,OAAxB;AAID,KAND;AAOD,GAR+B,CAQ7BN,MAAM,CAACU,OAAP,CAAeC,SAAf,CAAyBC,IARI,CAAhC;AASD,CAlCA,CAAD","sourcesContent":["(function(factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery', 'hammerjs'], factory);\n  }\n  else if (typeof exports === 'object') {\n    factory(require('jquery'), require('hammerjs'));\n  }\n  else {\n    factory(jQuery, Hammer);\n  }\n}(function($, Hammer) {\n  function hammerify(el, options) {\n    var $el = $(el);\n    if(!$el.data('hammer')) {\n      $el.data('hammer', new Hammer($el[0], options));\n    }\n  }\n\n  $.fn.hammer = function(options) {\n    return this.each(function() {\n      hammerify(this, options);\n    });\n  };\n\n  // extend the emit method to also trigger jQuery events\n  Hammer.Manager.prototype.emit = (function(originalEmit) {\n    return function(type, data) {\n      originalEmit.call(this, type, data);\n      $(this.element).trigger({\n        type: type,\n        gesture: data\n      });\n    };\n  })(Hammer.Manager.prototype.emit);\n}));\n"],"file":"jquery.hammer.js"}